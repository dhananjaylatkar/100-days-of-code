#+TITLE: 100 Days of Code Log
#+AUTHOR: Dhananjay

* Day 1: 2021-04-24 Sat
*Today's Progress:* Learning Rust - Arrays, Vectors, Slices and Strings

*Thoughts:* Arr, Vec and Slices are similar to ~list~ in python but, Strings are very tricky.

*Link to work:* Rust Fundamentals from Pluralsight. Notes are in my [[https://github.com/dhananjaylatkar/learning-rust][learining-rust]] repo

* Day 2: 2021-04-25 Sun
*Today's Progress:* Learning Rust - Tuples, Pattern matching, Generics, Functions, Methods and Closures

*Thoughts:*
1. Getting val from tuple felt odd (~t.0~).
2. Returning from fuc is kinda confusing (not writing ~return~ and ~;~).
3. Closures are like ~arrow~ func from ~js~

*Link to work:*
1. Rust Fundamentals from Pluralsight.
2. Notes are in my [[https://github.com/dhananjaylatkar/learning-rust][learining-rust]] repo

* Day 3: 2021-04-26 Mon
*Today's Progress:* Learning Rust - HOF, Traits and Lifetime (Ownership and Borrowing)

*Thoughts:*
1. HOFs are functions that take one or more functions and/or produce a more useful function.
2. Lifetime helps in memory safety.

*Link to work:*
1. Rust Fundamentals from Pluralsight.
2. Notes are in my [[https://github.com/dhananjaylatkar/learning-rust][learining-rust]] repo

* Day 4: 2021-04-27 Tue
*Today's Progress:*
1. Learning Rust - Crates, Building Modules, Testing and documentation.
2. Started rust-koans (Completed array part).

*Thoughts:*
1. Testing and documentation is something new for me.
2. Koans are very good way to learn/practice new language.

*Link to work:*
1. Rust Fundamentals from Pluralsight.
2. [[https://github.com/crazymykl/rust-koans][rust-koans]] can be found here.

* Day 5: 2021-04-28 Wed
*Today's Progress:*
1. Rust koans integer and vector.

*Thoughts:*
1. Got to know lots of vector functions.

*Link to work:*
1. [[https://github.com/crazymykl/rust-koans][rust-koans]] can be found here.

* Day 6: 2021-04-29 Thu
*Today's Progress:*
1. Built a guessing_game by following Rust book.
2. Read Chapter 4 of Rust book - Understanding Ownership.
3. Started Ch. 12 CLI program ~minigrep~.

*Thoughts:*
1. Building guessing_game provide more insights in rust basics.
2. Ch. 4 helped me understand Owenership in more detail.
3. Very excited for ~minigrep~ program.

*Link to work:*
1. [[https://github.com/dhananjaylatkar/learning-rust/tree/main/guessing_game][guessing_game]]
2. [[https://github.com/dhananjaylatkar/learning-rust/tree/main/minigrep][minigrep]]

* Day 7: 2021-04-30 Fri
*Today's Progress:*
1. Continued Ch.12 from The Rust Book CLI program - ~minigrep~.
   - Reading file and printing
   - Error handling
   - Modular coding

*Thoughts:*
1. It's a good idea to segregate functions for each task and call them in ~main()~.
2. Error handling is very prominent in Rust.

*Link to work:*
1. [[https://github.com/dhananjaylatkar/learning-rust/tree/main/minigrep][minigrep]]
